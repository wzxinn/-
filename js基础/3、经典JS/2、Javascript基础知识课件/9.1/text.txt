运算符
＋－＊／％ ＋＝ －＝.. >< >=<= !=
== = === || && ?: ++ —-

特殊符号不允许出现在变量名

$是可以当作变量的

for(初始的条件;判断条件;循环){}

逗号 这个js语句没有完成
分号 js语句结束了

for in 循环对象的
while 循环 
while(判断条件){执行的语句}
里面循环完了 就不管了
只循环一次

do{
执行的语句}
while(判断条件)
最低执行一次的循环

forEach 数组 
数组.forEach(function(e){alert(e)})
数组的 内容一个一个走

string
两种声明方式 第一种
是字面量
第二种是对象的形式

charAt
返回字符串的第几位

indexOf 
找字符串要找的位置的
如果有就返回该位置
没有就返回－1

第二个参数就是从第几位开始

lastIndexOf
从右往左找字符串要找的位置的
如果有就返回该位置
没有就返回－1
第二个参数没有什么意义

substring
字符串截取 
第一个参数 是开始 
第二个参数 是结束

如果只有一个参数 就是开始－结束
支持 反截取

slice
字符串截取 
第一个参数 是开始 
第二个参数 是结束

如果只有一个参数 就是开始－结束
不支持 反截取

substr
字符串截取
第一个参数 是开始
第二个参数 是从第一个参数往后走几位

如果只有一个参数 就是开始－结束

concat
字符串连接
类似于加号

split 
字符串转数组
穿的参数 变为切割的对象
［把参数变成逗号］

toUpperCase
转大写
toLowerCase
转小写

replace
返回新的 改变的字符串
替换 
第一个参数 要替换的东西
第二个参数 替换的东西

length 
返回他的长度

array
new Array() ［］
如果只有一个数字参数 就是长度 

push 
往数组的最后面添加一条数据 返回新数组的长度
unshift 
往数组的最前面添加一条数据 返回一个新的数组

shift 
删除数组的第一个 并且返回要删除的数据
pop 
删除数组的最后一个 并且返回要删除的数据

reverse
数组反转
返回值 是 数组反转的数据

concat
数组连结

slice 
数组截取
第一个 参数起始 
第二个 参数终点

如果只有一个参数 就是 起点－终点

splice
万能方法

一个参数的时候 
就是起点到终点

2个参数的时候  

第二个参数是0的话 就是从第一个参数的位置开始插入数据
第一个起始点 第二个是从第一个起始点开始要删除的个数 
第三个参数开始 就是要替换的数据

返回删除的数据


sort 排序

从小到大去拍
他只看第一位
a.sort(function(a,b){return a-b;})
排序函数只能针对 数字

非数字的第一位相等他就会看第二位

join
数组转字符串 
会返回字符串 

length
返回数组的长度

function 
它是一条数据 ［工具包］

如果直接执行这个变量名 那么它会返回自己

每个函数都一个自己的默认return值 
undefined 

function a(){}  弱类型声明方式
var 强类型声明

return 
函数的return 只要一看到return 后面都不走了
window 只是环境 并不是函数

编写型错误 自己的原因写错了 
之前都会执行

编译型错误 
都不会执行

匿名函数 没有名字的函数
(function(){})();
(function(){}());
~function(){}(); return  -(x)-1

arguments 不定参 
不定参就像一个数组  但是他不是